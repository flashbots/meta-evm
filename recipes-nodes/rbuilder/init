#!/bin/sh

### BEGIN INIT INFO
# Provides:        rbuilder
# Required-Start:  $remote_fs $syslog $networking reth
# Required-Stop:   $remote_fs $syslog
# Default-Start:   2 3 4 5
# Default-Stop:    1
# Short-Description: Start and stop the rbuilder daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/rbuilder
DAEMON_PROXY=/usr/bin/cvm-reverse-proxy
NAME=rbuilder
DESC="Rust Builder"
LOGFILE=/tmp/rbuilder.log
LOGFILE_PROXY=/tmp/proxy.log
LOGFILE_MONITOR=/tmp/rbuilder_monitor.log
PIDFILE=/var/run/rbuilder.pid
PIDFILE_PROXY=/var/run/proxy.pid
RBUILDER_USER=rbuilder
ETH_GROUP=eth

monitor_and_restart() {
    while true; do
        if ! pgrep -f "$DAEMON" > /dev/null; then
            echo "$(date): $DESC crashed. Restarting in 60 seconds..." >> ${LOGFILE_MONITOR}
            sleep 60
            start_builder
        fi
        sleep 5
    done
}

start_proxy() {
    echo -n "Starting attested TLS Proxy: "
    start-stop-daemon -S -p $PIDFILE_PROXY -c $RBUILDER_USER:$ETH_GROUP -N -10 -b -a /bin/sh -- -c "exec 
        ${DAEMON_PROXY} -server -target-port=8645 -listen-port=8745 \
        2>&1 | tee ${LOGFILE_PROXY}"
    echo "proxy."
}

start_builder() {
    # fetch the env variables that contains the secrets for the rbuilder
	source /usr/bin/setup_env.sh
    
    start-stop-daemon -S -p $PIDFILE -c $RBUILDER_USER:$ETH_GROUP -N -10 -b -a /bin/sh -- -c "exec 
        ${DAEMON} run /etc/rbuilder.config \
        2>&1 | tee ${LOGFILE}"
}

start() {
    echo -n "Starting $DESC: "
	# Specify the directory path you're waiting for
    target_directory="/persistent/reth/static_files/"

    while [ ! -d "$target_directory" ]; do
        echo "Waiting for directory: $target_directory"
        sleep 1
    done

    start_builder
    echo "$NAME."
    start_proxy
    
    # Start the monitor in the background
    su - $RBUILDER_USER -s /bin/sh -c "$(declare -f monitor_and_restart); monitor_and_restart" &
}

stop() {
    echo -n "Stopping $DESC: "
    start-stop-daemon -K -x "$DAEMON" -p $PIDFILE
    echo "$NAME."
    
    # Kill the monitor
    pkill -f "monitor_and_restart"
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart|reload)
        stop
        start
        ;;
  *)
    N=/etc/init.d/$NAME
    echo "Usage: $N {start|stop|restart|reload}" >&2
    exit 1
    ;;
esac

exit 0
