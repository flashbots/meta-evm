#!/bin/sh
### BEGIN INIT INFO
# Provides:          reth-sync
# Required-Start:    $network $remote_fs fetch-config
# Required-Stop:     $network $remote_fs
# Default-Start:     5
# Default-Stop:      0 1 6
# Short-Description: Sync data using rclone
# Description:       Runs rclone sync script to synchronize data from R2 storage
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DESC="Rclone Sync Service"
NAME=reth-sync
LOGFILE=/var/log/reth-sync.log
RCLONE_CONFIG=/etc/rclone.conf
RETH_DIR=/persistent/reth
RETH_USER=reth
ETH_GROUP=eth
DAEMON=/usr/bin/rclone
LATEST_META=$(rclone --config $RCLONE_CONFIG cat r2:chain-db-snapshots/reth-mainnet-full/latest_version.meta.txt)
DAEMON_ARGS="sync --config $RCLONE_CONFIG -v -P --transfers=20 --multi-thread-streams 30 \
    --contimeout=10m --retries 10 --retries-sleep 60 --error-on-no-transfer --update --fast-list \
    --delete-during --disable-http2 --no-gzip-encoding \
    --exclude 'files.txt' r2:chain-db-snapshots/reth-mainnet-full/$LATEST_META/ $RETH_DIR"

log() {
    echo "$(date): $1" >> "$LOGFILE"
    echo "$1" > /var/volatile/system-api.fifo
}

start() {
    log "Starting $DESC"

    # Ensure the reth-sync log file exists and has correct permissions
    touch "$LOGFILE"
    chown "$RETH_USER:$ETH_GROUP" "$LOGFILE"

    mkdir -p "$RETH_DIR"
    log "Latest meta: $LATEST_META"
    start-stop-daemon -S --make-pidfile -p $PIDFILE -m -b --exec /bin/sh -- -c "exec $DAEMON $DAEMON_ARGS >> $LOGFILE 2>&1"
	log "Reth is synced with the latest meta version: $LATEST_META" >> $LOGFILE 2>&1

    chown -R "$RETH_USER:$ETH_GROUP" "$RETH_DIR"
}

case "$1" in
    start)
        start
        ;;
    *)
        echo "Usage: $0 start" >&2
        exit 1
        ;;
esac

exit 0
